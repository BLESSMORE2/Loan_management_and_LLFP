# Generated by Django 5.1 on 2024-10-28 13:36

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CollateralLGD",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_calculate_lgd", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "collateral_lgd",
            },
        ),
        migrations.CreateModel(
            name="CoolingPeriodDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "v_amrt_term_unit",
                    models.CharField(
                        choices=[
                            ("M", "Monthly"),
                            ("Q", "Quarterly"),
                            ("H", "Half-Yearly"),
                            ("Y", "Yearly"),
                        ],
                        max_length=1,
                    ),
                ),
                ("n_cooling_period_days", models.IntegerField()),
            ],
            options={
                "db_table": "FSI_Cooling_Period_Definition",
            },
        ),
        migrations.CreateModel(
            name="Credit_Rating_Code_Band",
            fields=[
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "v_rating_code",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("v_rating_desc", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "dim_credit_rating_code_band",
            },
        ),
        migrations.CreateModel(
            name="CurrencyCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=3, unique=True)),
                ("description", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "dim_currency_code",
            },
        ),
        migrations.CreateModel(
            name="Dim_Delinquency_Band",
            fields=[
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "n_delq_band_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                (
                    "v_delq_band_desc",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("n_delq_lower_value", models.PositiveIntegerField()),
                ("n_delq_upper_value", models.PositiveIntegerField()),
                (
                    "v_amrt_term_unit",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "dim_delinquency_band",
            },
        ),
        migrations.CreateModel(
            name="Dim_Run",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                ("latest_run_skey", models.BigIntegerField(default=1)),
            ],
            options={
                "db_table": "dim_run",
            },
        ),
        migrations.CreateModel(
            name="DimExchangeRateConf",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("EXCHANGE_RATE_API_KEY", models.CharField(max_length=255)),
                ("use_on_exchange_rates", models.BooleanField(default=False)),
                ("use_latest_exchange_rates", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "dim_exchange_rate_conf",
            },
        ),
        migrations.CreateModel(
            name="ECLMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method_name",
                    models.CharField(
                        choices=[
                            ("forward_exposure", "Forward Exposure Methodology"),
                            ("cash_flow", "Cash Flow Calculations Methodology"),
                            ("simple_ead", "Simple EAD Methodology"),
                        ],
                        default="forward_exposure",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("uses_discounting", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "dim_ecl_method",
            },
        ),
        migrations.CreateModel(
            name="FSI_CreditRating_Stage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("credit_rating", models.CharField(max_length=50, unique=True)),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("Stage 1", "Stage 1"),
                            ("Stage 2", "Stage 2"),
                            ("Stage 3", "Stage 3"),
                        ],
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "FSI_CreditRating_Stage",
            },
        ),
        migrations.CreateModel(
            name="FSI_DPD_Stage_Mapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("M", "Monthly"),
                            ("Q", "Quarterly"),
                            ("H", "Half-Yearly"),
                            ("Y", "Yearly"),
                        ],
                        max_length=50,
                    ),
                ),
                ("stage_1_threshold", models.IntegerField()),
                ("stage_2_threshold", models.IntegerField()),
                ("stage_3_threshold", models.IntegerField()),
            ],
            options={
                "db_table": "FSI_DPD_Stage_Mapping",
            },
        ),
        migrations.CreateModel(
            name="Fsi_Interest_Method",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "v_interest_method",
                    models.CharField(
                        choices=[
                            ("Simple", "Simple Interest"),
                            ("Compound", "Compound Interest"),
                            ("Amortized", "Amortized Interest"),
                            ("Floating", "Floating/Variable Interest"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "Fsi_Interest_Method",
            },
        ),
        migrations.CreateModel(
            name="FSI_LLFP_APP_PREFERENCES",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pd_interpolation_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NL-POISSON", "Non-Linear Poisson"),
                            ("NL-GEOMETRIC", "Non-Linear Geometric"),
                            ("NL-ARITHMETIC", "Non-Linear Arithmetic"),
                            ("EXPONENTIAL_DECAY", "Exponential Decay"),
                        ],
                        default="NL-POISSON",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("n_pd_model_proj_cap", models.IntegerField(default=25)),
                (
                    "interpolation_level",
                    models.CharField(
                        choices=[
                            ("ACCOUNT", "Account Level"),
                            ("TERM_STRUCTURE", "PD Term Structure Level"),
                        ],
                        default="TERM_STRUCTURE",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "db_table": "FSI_LLFP_APP_PREFERENCES",
            },
        ),
        migrations.CreateModel(
            name="FSI_PD_Interpolated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("v_pd_term_structure_id", models.CharField(max_length=100)),
                ("fic_mis_date", models.DateField(null=True)),
                (
                    "v_int_rating_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "v_delq_band_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("v_pd_term_structure_type", models.CharField(max_length=3)),
                (
                    "n_pd_percent",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_per_period_default_prob",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_cumulative_default_prob",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                ("v_cash_flow_bucket_id", models.IntegerField()),
                ("v_cash_flow_bucket_unit", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "FSI_PD_Interpolated",
            },
        ),
        migrations.CreateModel(
            name="Function",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("function_name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "dim_function",
            },
        ),
        migrations.CreateModel(
            name="Ldn_Bank_Product_Info",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("v_prod_code", models.CharField(max_length=50, unique=True)),
                ("v_prod_name", models.CharField(max_length=100)),
                ("v_prod_type", models.CharField(max_length=50)),
                ("v_prod_group", models.CharField(max_length=50)),
                ("v_prod_group_desc", models.CharField(max_length=255)),
                ("v_prod_segment", models.CharField(max_length=100)),
                ("v_balance_sheet_category", models.CharField(max_length=50)),
                ("v_balance_sheet_category_desc", models.CharField(max_length=255)),
                ("v_prod_type_desc", models.CharField(max_length=255)),
                ("v_prod_desc", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "Ldn_Bank_Product_Info",
            },
        ),
        migrations.CreateModel(
            name="Ldn_Customer_Info",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_party_id", models.CharField(max_length=50, unique=True)),
                ("v_partner_name", models.CharField(max_length=50)),
                ("v_party_type", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "Ldn_Customer_Info",
            },
        ),
        migrations.CreateModel(
            name="Ldn_Financial_Instrument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField(null=True)),
                ("v_account_number", models.CharField(max_length=255, unique=True)),
                ("v_cust_ref_code", models.CharField(max_length=50, null=True)),
                ("v_prod_code", models.CharField(max_length=50, null=True)),
                (
                    "n_curr_interest_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Fixed interest rate for the loan",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "n_interest_changing_rate",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Changing interest rate value, e.g., LIBOR rate at a specific time",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("v_interest_freq_unit", models.CharField(max_length=50, null=True)),
                ("v_interest_payment_type", models.CharField(max_length=50, null=True)),
                (
                    "v_day_count_ind",
                    models.CharField(
                        default="30/365",
                        help_text="This column stores the accrual basis code for interest accrual calculation.",
                        max_length=7,
                    ),
                ),
                (
                    "v_management_fee_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Annual management fee rate, e.g., 1%",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "n_wht_percent",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "n_effective_interest_rate",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "n_accrued_interest",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("d_start_date", models.DateField(null=True)),
                ("d_last_payment_date", models.DateField(null=True)),
                ("d_next_payment_date", models.DateField(null=True)),
                ("d_maturity_date", models.DateField(null=True)),
                ("v_amrt_repayment_type", models.CharField(max_length=50, null=True)),
                ("v_amrt_term_unit", models.CharField(max_length=50, null=True)),
                (
                    "n_eop_curr_prin_bal",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "n_eop_int_bal",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "n_eop_bal",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "n_curr_payment_recd",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "n_collateral_amount",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("n_delinquent_days", models.IntegerField(null=True)),
                (
                    "n_pd_percent",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "n_lgd_percent",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("v_ccy_code", models.CharField(max_length=10, null=True)),
                ("v_loan_type", models.CharField(max_length=50, null=True)),
                (
                    "m_fees",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("v_m_fees_term_unit", models.CharField(max_length=1, null=True)),
                ("v_lob_code", models.CharField(max_length=50, null=True)),
                ("v_lv_code", models.CharField(max_length=50, null=True)),
                ("v_country_id", models.CharField(max_length=50, null=True)),
                ("v_credit_rating_code", models.CharField(max_length=50, null=True)),
                (
                    "v_org_credit_score",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "v_curr_credit_score",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                (
                    "v_acct_rating_movement",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("v_collateral_type", models.CharField(max_length=50, null=True)),
                ("v_loan_desc", models.CharField(max_length=255, null=True)),
                (
                    "v_account_classification_cd",
                    models.CharField(max_length=50, null=True),
                ),
                ("v_gaap_code", models.CharField(max_length=50, null=True)),
                ("v_branch_code", models.CharField(max_length=50, null=True)),
            ],
            options={
                "db_table": "Ldn_Financial_Instrument",
            },
        ),
        migrations.CreateModel(
            name="Ldn_Payment_Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_account_number", models.CharField(max_length=50)),
                ("d_payment_date", models.DateField()),
                (
                    "n_principal_payment_amt",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_interest_payment_amt",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_amount",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                ("v_payment_type_cd", models.CharField(max_length=20, null=True)),
            ],
            options={
                "db_table": "Ldn_Payment_Schedule",
            },
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "function_name",
                    models.CharField(
                        choices=[("INFO", "Info"), ("ERROR", "Error")], max_length=50
                    ),
                ),
                (
                    "log_level",
                    models.CharField(
                        choices=[("INFO", "Info"), ("ERROR", "Error")], max_length=50
                    ),
                ),
                ("message", models.TextField()),
                ("status", models.CharField(default="SUCCESS", max_length=10)),
            ],
            options={
                "verbose_name": "Log",
                "verbose_name_plural": "Logs",
                "db_table": "dim_massage_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("process_name", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "dim_process",
            },
        ),
        migrations.CreateModel(
            name="ReportColumnConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_name",
                    models.CharField(default="default_report", max_length=20),
                ),
                ("selected_columns", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "dim_report_column_map",
            },
        ),
        migrations.CreateModel(
            name="TableMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("table_name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "table_type",
                    models.CharField(
                        choices=[
                            ("FACT", "Fact Table"),
                            ("DIM", "Dimension Table"),
                            ("REF", "Reference Table"),
                            ("STG", "Staging Table"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "db_table": "TableMetadata",
            },
        ),
        migrations.CreateModel(
            name="FSI_Expected_Cashflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_account_number", models.CharField(max_length=50)),
                ("n_cash_flow_bucket", models.IntegerField()),
                ("d_cash_flow_date", models.DateField()),
                (
                    "n_principal_payment",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "n_interest_payment",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                (
                    "n_cash_flow_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("n_balance", models.DecimalField(decimal_places=2, max_digits=20)),
                (
                    "n_accrued_interest",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_exposure_at_default",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                ("V_CASH_FLOW_TYPE", models.CharField(max_length=10)),
                (
                    "management_fee_added",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("V_CCY_CODE", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "FSI_Expected_Cashflow",
                "unique_together": {
                    ("fic_mis_date", "v_account_number", "d_cash_flow_date")
                },
            },
        ),
        migrations.CreateModel(
            name="fsi_Financial_Cash_Flow_Cal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("n_run_skey", models.BigIntegerField(default=1, null=True)),
                ("v_account_number", models.CharField(max_length=20)),
                ("d_cash_flow_date", models.DateField()),
                ("fic_mis_date", models.DateField()),
                (
                    "n_principal_run_off",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_interest_run_off",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                ("n_cash_flow_bucket_id", models.IntegerField(null=True)),
                (
                    "n_cash_flow_amount",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_cumulative_loss_rate",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_expected_cash_flow_rate",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_discount_rate",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_discount_factor",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_expected_cash_flow",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_effective_interest_rate",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_lgd_percent",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_expected_cash_flow_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_exposure_at_default",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_forward_expected_loss",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_forward_expected_loss_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                ("v_ccy_code", models.CharField(max_length=3, null=True)),
                (
                    "n_cash_shortfall",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_cash_shortfall_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_per_period_impaired_prob",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_cumulative_impaired_prob",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_12m_per_period_pd",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_12m_cumulative_pd",
                    models.DecimalField(decimal_places=11, max_digits=15, null=True),
                ),
                (
                    "n_12m_exp_cash_flow",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_12m_exp_cash_flow_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_12m_cash_shortfall",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_12m_cash_shortfall_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_12m_fwd_expected_loss",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
                (
                    "n_12m_fwd_expected_loss_pv",
                    models.DecimalField(decimal_places=3, max_digits=22, null=True),
                ),
            ],
            options={
                "db_table": "fsi_Financial_Cash_Flow_Cal",
                "unique_together": {
                    (
                        "v_account_number",
                        "d_cash_flow_date",
                        "fic_mis_date",
                        "n_run_skey",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="FSI_PD_Account_Interpolated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_account_number", models.CharField(max_length=50)),
                ("n_pd_percent", models.DecimalField(decimal_places=6, max_digits=10)),
                (
                    "n_per_period_default_prob",
                    models.DecimalField(decimal_places=6, max_digits=10),
                ),
                (
                    "n_cumulative_default_prob",
                    models.DecimalField(decimal_places=6, max_digits=10),
                ),
                ("v_cash_flow_bucket_id", models.IntegerField()),
                (
                    "v_cash_flow_bucket_unit",
                    models.CharField(
                        choices=[
                            ("M", "Monthly"),
                            ("Q", "Quarterly"),
                            ("H", "Half-Yearly"),
                            ("Y", "Yearly"),
                        ],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "db_table": "fsi_pd_account_interpolated",
                "unique_together": {
                    ("fic_mis_date", "v_account_number", "v_cash_flow_bucket_id")
                },
            },
        ),
        migrations.CreateModel(
            name="FSI_Product_Segment",
            fields=[
                ("segment_id", models.AutoField(primary_key=True, serialize=False)),
                ("v_prod_segment", models.CharField(max_length=255)),
                ("v_prod_type", models.CharField(max_length=255)),
                ("v_prod_desc", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "fsi_product_segment",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("v_prod_segment", "v_prod_type", "v_prod_desc"),
                        name="unique_segment_type_desc",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Ldn_Acct_Recovery_Detail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("v_account_number", models.CharField(max_length=50)),
                ("fic_mis_date", models.DateField()),
                ("d_recovery_date", models.DateField()),
                ("v_recovery_type_code", models.CharField(max_length=20)),
                (
                    "n_prin_recovery_amt",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_int_recovery_amt",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_charge_recovery_amt",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "v_recovery_stage_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "n_cost_case_filed",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "v_iso_currency_cd",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("v_lv_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "n_recovery_income_amt",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "v_data_source_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "ldn_acct_recovery_detail",
                "unique_together": {
                    ("v_account_number", "fic_mis_date", "d_recovery_date")
                },
            },
        ),
        migrations.CreateModel(
            name="Ldn_Customer_Rating_Detail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_party_cd", models.CharField(max_length=50)),
                ("v_rating_code", models.CharField(max_length=50)),
                ("v_purpose", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "Ldn_Customer_Rating_Detail",
                "unique_together": {("fic_mis_date", "v_party_cd")},
            },
        ),
        migrations.CreateModel(
            name="Ldn_Exchange_Rate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_from_ccy_code", models.CharField(max_length=3)),
                ("v_to_ccy_code", models.CharField(max_length=3)),
                (
                    "n_exchange_rate",
                    models.DecimalField(decimal_places=6, max_digits=15),
                ),
                ("d_last_updated", models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "Ldn_exchange_rate",
                "unique_together": {
                    ("fic_mis_date", "v_from_ccy_code", "v_to_ccy_code")
                },
            },
        ),
        migrations.CreateModel(
            name="Ldn_Expected_Cashflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_account_number", models.CharField(max_length=50)),
                ("d_cash_flow_date", models.DateField()),
                (
                    "n_cash_flow_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("V_CASH_FLOW_TYPE", models.CharField(max_length=10)),
                ("V_CCY_CODE", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "Ldn_expected_cashflow",
                "unique_together": {
                    ("fic_mis_date", "v_account_number", "d_cash_flow_date")
                },
            },
        ),
        migrations.CreateModel(
            name="Ldn_PD_Term_Structure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "v_pd_term_structure_id",
                    models.CharField(max_length=100, unique=True),
                ),
                (
                    "v_pd_term_structure_desc",
                    models.CharField(editable=False, max_length=50),
                ),
                (
                    "v_pd_term_frequency_unit",
                    models.CharField(
                        choices=[
                            ("M", "Monthly"),
                            ("Q", "Quarterly"),
                            ("H", "Half Yearly"),
                            ("Y", "Yearly"),
                            ("D", "Daily"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "v_pd_term_structure_type",
                    models.CharField(
                        choices=[("R", "Rating"), ("D", "DPD")], max_length=1
                    ),
                ),
                (
                    "v_default_probability_type",
                    models.CharField(
                        choices=[("M", "Marginal"), ("C", "Cumulative")], max_length=1
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                (
                    "v_pd_term_structure_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.fsi_product_segment",
                    ),
                ),
            ],
            options={
                "db_table": "ldn_pd_term_structure",
                "unique_together": {("v_pd_term_structure_id", "fic_mis_date")},
            },
        ),
        migrations.CreateModel(
            name="Ldn_Recovery_Cashflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_account_number", models.CharField(max_length=50)),
                ("d_cash_flow_date", models.DateField()),
                (
                    "n_cash_flow_amount",
                    models.DecimalField(decimal_places=2, max_digits=20),
                ),
                ("V_CASH_FLOW_TYPE", models.CharField(max_length=10)),
                ("V_CCY_CODE", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "Ldn_Recovery_Cashflow",
                "unique_together": {
                    ("fic_mis_date", "v_account_number", "d_cash_flow_date")
                },
            },
        ),
        migrations.CreateModel(
            name="LgdCollateral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_cust_ref_code", models.CharField(max_length=50)),
                ("v_ccy_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "cash",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "guarantees_corporate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "guarantees_personal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "insurance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "land_and_buildings",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "floating_charge_debenture",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "notarial_bond",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "general_haircuts",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "project_specific_haircuts",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=18, null=True
                    ),
                ),
            ],
            options={
                "db_table": "lgd_collateral",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("v_cust_ref_code", "fic_mis_date"),
                        name="lgd_collateral_pk",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ReportingCurrency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "currency_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.currencycode",
                    ),
                ),
            ],
            options={
                "db_table": "dim_reporting_currency_code",
            },
        ),
        migrations.CreateModel(
            name="RunProcess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
                (
                    "function",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="IFRS9.function"
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="run_processes",
                        to="IFRS9.process",
                    ),
                ),
            ],
            options={
                "db_table": "dim_process_dtl",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="FCT_Stage_Determination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("n_account_number", models.CharField(max_length=50, null=True)),
                ("d_acct_start_date", models.DateField(blank=True, null=True)),
                ("d_last_payment_date", models.DateField(blank=True, null=True)),
                ("d_next_payment_date", models.DateField(blank=True, null=True)),
                ("d_maturity_date", models.DateField(blank=True, null=True)),
                ("n_acct_classification", models.IntegerField(blank=True, null=True)),
                ("n_cust_ref_code", models.CharField(max_length=50, null=True)),
                ("n_partner_name", models.CharField(max_length=50)),
                ("n_party_type", models.CharField(max_length=50)),
                (
                    "n_accrual_basis_code",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                (
                    "n_curr_interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=11, null=True
                    ),
                ),
                (
                    "n_effective_interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "v_interest_freq_unit",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                (
                    "v_interest_method",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "n_accrued_interest",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_rate_chg_min",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                (
                    "n_carrying_amount_ncy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_exposure_at_default",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_exposure_limit",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_eop_prin_bal",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_lgd_percent",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_pd_percent",
                    models.DecimalField(decimal_places=4, max_digits=15, null=True),
                ),
                (
                    "n_twelve_months_orig_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_lifetime_orig_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_twelve_months_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_lifetime_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_pd_term_structure_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "n_pd_term_structure_desc",
                    models.CharField(editable=False, max_length=50),
                ),
                (
                    "n_12m_pd_change",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_rating_impaired_state_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("v_amrt_repayment_type", models.CharField(max_length=50, null=True)),
                ("n_remain_no_of_pmts", models.BigIntegerField(blank=True, null=True)),
                ("n_amrt_term", models.IntegerField(blank=True, null=True)),
                (
                    "v_amrt_term_unit",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("v_ccy_code", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "v_common_coa_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("v_gl_code", models.CharField(blank=True, max_length=20, null=True)),
                ("n_delinquent_days", models.IntegerField(blank=True, null=True)),
                ("n_delq_band_code", models.CharField(max_length=50, null=True)),
                ("n_stage_descr", models.CharField(max_length=50, null=True)),
                (
                    "n_curr_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "n_prev_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("d_cooling_start_date", models.DateField(blank=True, null=True)),
                (
                    "n_target_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("n_in_cooling_period_flag", models.BooleanField(default=False)),
                (
                    "n_cooling_period_duration",
                    models.IntegerField(blank=True, null=True),
                ),
                ("n_country", models.CharField(max_length=50, null=True)),
                ("n_segment_skey", models.BigIntegerField(blank=True, null=True)),
                ("n_prod_segment", models.CharField(max_length=255)),
                ("n_prod_code", models.CharField(max_length=50, null=True)),
                ("n_prod_name", models.CharField(max_length=50, null=True)),
                ("n_prod_type", models.CharField(max_length=50, null=True)),
                ("n_prod_desc", models.CharField(max_length=255)),
                ("n_ecl_compute_ind", models.IntegerField(default=0)),
                ("n_credit_rating_code", models.CharField(max_length=50, null=True)),
                (
                    "n_org_credit_score",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("n_curr_credit_score", models.IntegerField(blank=True, null=True)),
                ("n_acct_rating_movement", models.IntegerField(blank=True, null=True)),
                ("n_party_rating_movement", models.IntegerField(blank=True, null=True)),
                (
                    "n_conditionally_cancel_flag",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "n_collateral_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                ("n_loan_type", models.CharField(max_length=50, null=True)),
                (
                    "n_pd_term_structure_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.fsi_product_segment",
                    ),
                ),
            ],
            options={
                "db_table": "fct_stage_determination",
                "unique_together": {("fic_mis_date", "n_account_number")},
            },
        ),
        migrations.CreateModel(
            name="FCT_Reporting_Lines",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("n_run_key", models.BigIntegerField(blank=True, null=True)),
                ("fic_mis_date", models.DateField()),
                ("n_account_number", models.CharField(max_length=50, null=True)),
                ("d_acct_start_date", models.DateField(blank=True, null=True)),
                ("d_last_payment_date", models.DateField(blank=True, null=True)),
                ("d_next_payment_date", models.DateField(blank=True, null=True)),
                ("d_maturity_date", models.DateField(blank=True, null=True)),
                ("n_acct_classification", models.IntegerField(blank=True, null=True)),
                ("n_cust_ref_code", models.CharField(max_length=50, null=True)),
                ("n_partner_name", models.CharField(max_length=50)),
                ("n_party_type", models.CharField(max_length=50)),
                (
                    "n_accrual_basis_code",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                (
                    "n_curr_interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=11, null=True
                    ),
                ),
                (
                    "n_effective_interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "v_interest_freq_unit",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                (
                    "v_interest_method",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "n_accrued_interest",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_rate_chg_min",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=10, null=True
                    ),
                ),
                ("v_ccy_code", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "n_carrying_amount_ncy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_carrying_amount_rcy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_exposure_at_default_ncy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_exposure_at_default_rcy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_pv_of_cash_flows",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_write_off_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_expected_recovery",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_lifetime_ecl_ncy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_lifetime_ecl_rcy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_12m_ecl_ncy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_12m_ecl_rcy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                (
                    "n_lgd_percent",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_pd_percent",
                    models.DecimalField(decimal_places=4, max_digits=15, null=True),
                ),
                (
                    "n_twelve_months_orig_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_lifetime_orig_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_twelve_months_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_lifetime_pd",
                    models.DecimalField(
                        blank=True, decimal_places=11, max_digits=15, null=True
                    ),
                ),
                (
                    "n_pd_term_structure_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "n_pd_term_structure_desc",
                    models.CharField(editable=False, max_length=50),
                ),
                (
                    "n_12m_pd_change",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                ("v_amrt_repayment_type", models.CharField(max_length=50, null=True)),
                ("n_remain_no_of_pmts", models.BigIntegerField(blank=True, null=True)),
                ("n_amrt_term", models.IntegerField(blank=True, null=True)),
                (
                    "v_amrt_term_unit",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("n_delinquent_days", models.IntegerField(blank=True, null=True)),
                ("n_delq_band_code", models.CharField(max_length=50, null=True)),
                ("n_stage_descr", models.CharField(max_length=50, null=True)),
                (
                    "n_curr_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "n_prev_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("d_cooling_start_date", models.DateField(blank=True, null=True)),
                (
                    "n_target_ifrs_stage_skey",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("n_in_cooling_period_flag", models.BooleanField(default=False)),
                (
                    "n_cooling_period_duration",
                    models.IntegerField(blank=True, null=True),
                ),
                ("n_country", models.CharField(max_length=50, null=True)),
                ("n_segment_skey", models.BigIntegerField(blank=True, null=True)),
                ("n_prod_segment", models.CharField(max_length=255)),
                ("n_prod_code", models.CharField(max_length=50, null=True)),
                ("n_prod_name", models.CharField(max_length=50, null=True)),
                ("n_prod_type", models.CharField(max_length=50, null=True)),
                ("n_prod_desc", models.CharField(max_length=255)),
                ("n_credit_rating_code", models.CharField(max_length=50, null=True)),
                (
                    "n_org_credit_score",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("n_curr_credit_score", models.IntegerField(blank=True, null=True)),
                ("n_acct_rating_movement", models.IntegerField(blank=True, null=True)),
                ("n_party_rating_movement", models.IntegerField(blank=True, null=True)),
                (
                    "n_conditionally_cancel_flag",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "n_collateral_amount",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=22, null=True
                    ),
                ),
                ("n_loan_type", models.CharField(max_length=50, null=True)),
                (
                    "n_pd_term_structure_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.fsi_product_segment",
                    ),
                ),
            ],
            options={
                "db_table": "fct_reporting_lines",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("fic_mis_date", "n_account_number", "n_run_key"),
                        name="unique_fct_reporting_lines",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Ldn_LGD_Term_Structure",
            fields=[
                (
                    "v_lgd_term_structure_id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "v_lgd_term_structure_desc",
                    models.CharField(editable=False, max_length=50),
                ),
                ("n_lgd_percent", models.DecimalField(decimal_places=4, max_digits=5)),
                ("fic_mis_date", models.DateField()),
                (
                    "v_lgd_term_structure_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.fsi_product_segment",
                    ),
                ),
            ],
            options={
                "db_table": "ldn_lgd_term_structure",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("v_lgd_term_structure_id", "fic_mis_date"),
                        name="unique_term_structure_id_date",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Ldn_PD_Term_Structure_Dtl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fic_mis_date", models.DateField()),
                ("v_credit_risk_basis_cd", models.CharField(max_length=100)),
                ("n_pd_percent", models.DecimalField(decimal_places=4, max_digits=5)),
                (
                    "v_pd_term_structure_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="IFRS9.ldn_pd_term_structure",
                        to_field="v_pd_term_structure_id",
                    ),
                ),
            ],
            options={
                "db_table": "Ldn_pd_term_structure_dtl",
                "unique_together": {
                    ("v_pd_term_structure_id", "fic_mis_date", "v_credit_risk_basis_cd")
                },
            },
        ),
        migrations.CreateModel(
            name="FunctionExecutionStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("execution_date", models.DateTimeField(auto_now_add=True)),
                ("execution_order", models.PositiveIntegerField(null=True)),
                ("reporting_date", models.DateField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Ongoing", "Ongoing"),
                            ("Success", "Success"),
                            ("Failed", "Failed"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                ("process_run_id", models.CharField(max_length=50)),
                ("run_count", models.PositiveIntegerField()),
                (
                    "function",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="IFRS9.function"
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="IFRS9.process"
                    ),
                ),
            ],
            options={
                "db_table": "dim_function_execution_status",
                "ordering": ["run_count", "execution_date"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("execution_date", "process_run_id", "function"),
                        name="unique_execution_process",
                    )
                ],
            },
        ),
    ]
